---

- name: Release id
  shell: 'date +%Y%m%d%H%M%S'
  register: release_id
  tags: ['debug']

- name: Set fact env
  set_fact: env="{{ hostvars[inventory_hostname]['env'] }}"
  tags: ['debug']

- name: Copy env file
  copy: src={{ item.key }}.{{ env }} dest=/etc/{{ item.key }}.{{ env }}.cfg mode=0644 owner=root group=root
  with_dict: "{{ upstream }}"
  tags: ['debug']

- include: test.yml

- name: Create release dir
  file: path=/opt/app/{{ item.key }}/{{ release_id.stdout }} state=directory mode=0755 owner={{ app_user }} group={{ app_group }}
  with_dict: "{{ upstream }}"
  tags: ['debug']

- name: Create config info
  template: src=config.json.j2 dest=/opt/app/{{ item.key }}/{{ release_id.stdout }}/config.json mode=0755 owner={{ app_user }} group={{ app_group }}
  with_dict: "{{ upstream }}"
  tags: ['debug']

- name: Copy app bin file
  copy: src={{ item.key }} dest=/opt/app/{{ item.key }}/{{ release_id.stdout }}/{{ item.key }} owner={{ app_user }} group={{ app_group }} force=yes mode=a+x
  with_dict: "{{ upstream }}"
  tags: ['debug']

- name: Create symlink to new app
  file: src=/opt/app/{{ item.key }}/{{ release_id.stdout }}/{{ item.key }} dest=/usr/local/bin/{{ item.key }} state=link force=yes
  with_dict: "{{ upstream }}"
  tags: ['debug']
  
- name: Generate name
  set_fact:
    app_name: "[
    {% for item in upstream %}
      {% for port in upstream[item].ports %}
        '{{ item }}-{{ port }}',
      {% endfor %}
    {% endfor %}]"
  tags: ['debug']

- name: Generate systemd config
  template: src=app.service.j2 dest=/etc/systemd/system/{{ item }}.service mode=0644 owner=root group=root
  with_items:
    - "{{ app_name }}"
  tags: ['debug']

- name: Start apps
  systemd: state=started daemon_reload=yes name={{ item }}.service
  with_items:
    - "{{ app_name }}"
  tags: ['debug']

- name: Set fact all ports
  set_fact:
    ports: "[
    {% for item in upstream %}
      {% for port in upstream[item].ports %}
        '{{ port }}',
      {% endfor %}
    {% endfor %}]"
  tags: ['debug']

- name: Get JSON stats
  uri: url="http://127.0.0.1:{{ item }}/stats" return_content=yes method=GET status_code=200 body_format=json
  with_items: "{{ ports }}"
  register: json_response
  until: "{{ json_response.json.status == 'ok' }}"
  retries: 1000
  delay: 30
  tags: ['debug']

- name: Generate nginx config
  template: src=nginx_upstream.j2 dest=/etc/nginx/conf.d/upstream.conf mode=0644 owner=root group=root
  with_dict: "{{ upstream }}"
  tags: ['debug']

- name: Reload nginx
  service: name=nginx state=reloaded
  tags: ['debug', 'ls']